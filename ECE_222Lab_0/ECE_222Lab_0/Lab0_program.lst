


ARM Macro Assembler    Page 1 


    1 00000000         ;*------------------------------------------------------
                       ----------------------
    2 00000000         ;* Name: Lab_0_program.s
    3 00000000         ;* Purpose: Teaching students how to work with the uVisi
                       on software
    4 00000000         ;* Author: Rasoul Keshavarzi
    5 00000000         ;*------------------------------------------------------
                       ----------------------
    6 00000000                 THUMB                        ; Thumb instruction
                                                             set
    7 00000000                 AREA             My_code, CODE, READONLY
    8 00000000                 EXPORT           __MAIN
    9 00000000                 ENTRY
   10 00000000         __MAIN                               ; This name should 
                                                            not be changed. It 
                                                            matches with the st
                                                            artup_LPC17xx.s fil
                                                            e.
   11 00000000         ; Storing 0x1234,5678 into memory address 0x1000,0000 in
                        order to see how little-endian
   12 00000000         ; approach writes data into memory
   13 00000000 F245 6078       MOV              R0, #0x5678 ; Loading least sig
                                                            nificant part of R0
                                                            
   14 00000004 F2C1 2034       MOVT             R0, #0x1234 ; Loading most sign
                                                            ificant part of R0
   15 00000008 F04F 0100       MOV              R1, #0x0    ; Loading least sig
                                                            nificant part of R1
                                                             by zeros
   16 0000000C F2C1 0100       MOVT             R1, #0x1000 ; 0x1000,0000 store
                                                            d in R1
   17 00000010 6008            STR              R0, [R1]    ; Look at the memor
                                                            y address 0x1000,00
                                                            00
   18 00000012         ; Importing values to registers
   19 00000012 F240 1023       MOV              R0, #0x123  ; Loading 123 into 
                                                            R0
   20 00000016 F240 4156       MOV              R1, #0x456  ; Loading 456 into 
                                                            R1
   21 0000001A F240 7289       MOV              R2, #0x789  ; Loading 789 into 
                                                            R2
   22 0000001E F640 23BC       MOV              R3, #0xABC  ; Loading ABC into 
                                                            R3
   23 00000022 F640 54EF       MOV              R4, #0xDEF  ; Loading DEF into 
                                                            R4
   24 00000026 F04F 0500       MOV              R5, #0x0    ; Loading R5 with z
                                                            eros
   25 0000002A         ; Swapping the values in R0 and R1 (R5 is used as tempor
                       ary buffer)
   26 0000002A 4605            MOV              R5, R0      ; R5 <-- R0 (conten
                                                            t of R0 is stored i
                                                            n R5)
   27 0000002C 4608            MOV              R0, R1      ; R0 <-- R1 (conten
                                                            t of R1 is stored i
                                                            n R0)
   28 0000002E 4629            MOV              R1, R5      ; R1 <-- R5 (conten
                                                            t of R5 is stored i
                                                            n R1)
   29 00000030         ; Adding five values together R5 <-- R0+R1+R2+R3+R4



ARM Macro Assembler    Page 2 


   30 00000030 EB00 0501       ADD              R5, R0, R1  ; R5 <-- R0 + R1
   31 00000034 4415            ADD              R5, R2      ; R5 <-- R5 + R2
   32 00000036 441D            ADD              R5, R3      ; R5 <-- R5 + R3
   33 00000038 4425            ADD              R5, R4      ; R5 <-- R5 + R4
   34 0000003A E7FE    LOOP    B                LOOP        ; Infinite loop
   35 0000003C                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=Lab0_pro
gram.d -oLab0_program.o -IC:\Software\Keil\ARM\RV31\INC -IC:\Software\Keil\ARM\
CMSIS\Include -IC:\Software\Keil\ARM\Inc\NXP\LPC17xx --list=Lab0_program.lst La
b0_program.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

LOOP 0000003A

Symbol: LOOP
   Definitions
      At line 34 in file Lab0_program.s
   Uses
      At line 34 in file Lab0_program.s
Comment: LOOP used once
My_code 00000000

Symbol: My_code
   Definitions
      At line 7 in file Lab0_program.s
   Uses
      None
Comment: My_code unused
__MAIN 00000000

Symbol: __MAIN
   Definitions
      At line 10 in file Lab0_program.s
   Uses
      At line 8 in file Lab0_program.s
Comment: __MAIN used once
3 symbols
333 symbols in table
